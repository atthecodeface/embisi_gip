#a Copyright
#  
#  This file 'eth_0.hwex' copyright Gavin J Stark 2004
#  

#a Instantiate modules
#b Add GIP simple
module gip_system "gip_simple"

#b Add MII testbench
option_string "monitor_level" "15"
option_string "sources" env_string("mii_rx_sources")
option_string "sinks" env_string("mii_tx_sinks")
module mii_testbench "mii"

#b Add UART testbench
option_string "exec_file" env_string("uart_exec_file")
option_int monitor_level 0
option_int tx_baud_add 1
option_int tx_baud_subtract 7
option_int rx_baud_add 1
option_int rx_baud_subtract 7
module uart_testbench "uart_testbench"

#b Add DDR model
option_string "filename" env_string("ddr_mif")
#module ddr_16m_x_32 "ddr"
module ddr_32m_x_16 "ddr"

#b Add test harness
option_string "clock" "ddr_clock"
option_string "inputs" "dq_oe_ctl dq_oe_ddr logic_ck_fb"
option_string "outputs" "test_reset cke_last_of_logic logic_ck"
option_string "filename" "gip_ddr.th"
module se_test_harness "ddrth"

#b Ext bus test harness
option_string "clock" "extbus_clock"
option_string "inputs" "ext_bus_ce[4] ext_bus_oe ext_bus_we ext_bus_address[24] ext_bus_write_data_enable ext_bus_write_data[32] leds[8]"
option_string "outputs" "ext_bus_read_data[32]"
option_string "filename" "extbus.th"
module se_test_harness "extbusth"

#b Sync serial test harness
option_string enable env_string("ss_enable")
option_string "clock" "ss_clock"
option_string "inputs" "ssdo ssdo_oe sscl[2] sscl_oe[2] sscs[8]"
option_string "outputs" "ssdi[2]"
option_string "filename" "ss.th"
module se_test_harness "ss_th"

#b Parallel test harness A
option_string enable env_string("par_a_enable")
option_string "clock" "par_clock"
option_string "inputs" "par_control_outputs[4] par_control_oes[4] par_data_outputs[16] par_data_output_width[3] par_data_oe"
option_string "outputs" "par_control_inputs[3] par_data_inputs[16]"
option_string "filename" "par_a.th"
module se_test_harness "par_a_th"

#b Parallel test harness B
option_string enable env_string("par_b_enable")
option_string "clock" "par_clock"
option_string "inputs" "par_control_outputs[4] par_control_oes[4] par_data_outputs[16] par_data_output_width[3] par_data_oe"
option_string "outputs" "par_control_inputs[3] par_data_inputs[16]"
option_string "filename" "par_b.th"
module se_test_harness "par_b_th"

#b Add DDR pin logic
option_string "clock" "ddr_clock"
option_string "inputs" "next_cke next_s_n[2] next_ras_n next_cas_n next_we_n next_a[13] next_ba[2] next_dq[32] next_dqm[4] next_dqoe next_dqs_high[4] next_dqs_low[4] dq_to_ctl[16] dqs_to_ctl[2]"
option_string "outputs" "cke select_n[2] ras_n cas_n we_n ba[2] a[13] dqs_out[2] dq_out[16] dqm[2] dq_in_low[16] dq_in_high[16] dq_oe_ctl"
option_string "filename" "ddr_pins.th"
module se_test_harness "ddr_pins"

#a Wire them up
#b Drive clocks - name, delay, cycles high, cycles low
# ddr_clock is 8ns; 4 high, 4 low
# 4x clock is then 1 high, 1 low
# main clock is then at 96ns; 48 high, 48 low
# 10Mbps ethernet is at 400ns; 200 high, 200 low
clock ddr_x4_clock 0 1 1
clock ddr_clock 0 4 4
clock logic_clock 0 48 48
clock eth_clock 0 200 200
clock par_a_clock 0 15 15
clock par_b_clock 0 48 48
clock never_clock 0 0x7ffffff 0x7fffffff

drive ddrth.ddr_clock ddr_clock
drive ddr_pins.ddr_clock ddr_x4_clock
drive gip_simple.int_clock logic_clock
drive gip_simple.analyzer_clock logic_clock
drive gip_simple.drm_clock ddr_clock
drive ddr.ddr_clock ddr_clock

beq env_int("extbus_enable") 1 extbus_enabled
drive extbusth.extbus_clock never_clock
goto extbus_clocked
extbus_enabled:
drive extbusth.extbus_clock logic_clock
extbus_clocked:

int clock_mii
set clock_mii 0
beq env_int("rx_mii_enable") 1 rx_mii_enabled
drive gip_simple.eth_mii_rx_clock never_clock
goto rx_mii_clocked
rx_mii_enabled:
drive gip_simple.eth_mii_rx_clock eth_clock
set clock_mii 1
rx_mii_clocked:

beq env_int("tx_mii_enable") 1 tx_mii_enabled
drive gip_simple.eth_mii_tx_clock never_clock
goto tx_mii_clocked
tx_mii_enabled:
drive gip_simple.eth_mii_tx_clock eth_clock
set clock_mii 1
tx_mii_clocked:

beq clock_mii 1 mii_enabled
drive mii.int_clock never_clock
goto mii_clocked
mii_enabled:
drive mii.int_clock eth_clock
mii_clocked:

beq env_int("ss_enable") 1 ss_enabled
drive ss_th.ss_clock never_clock
goto ss_clocked
ss_enabled:
drive ss_th.ss_clock logic_clock
ss_clocked:

beq env_int("par_a_enable") 1 par_a_enabled
drive par_a_th.par_clock never_clock
drive gip_simple.par_a_clock never_clock
goto par_a_clocked
par_a_enabled:
drive par_a_th.par_clock par_a_clock
drive gip_simple.par_a_clock par_a_clock
par_a_clocked:

beq env_int("par_b_enable") 1 par_b_enabled
drive par_b_th.par_clock never_clock
drive gip_simple.par_b_clock never_clock
goto par_b_clocked
par_b_enabled:
drive par_b_th.par_clock par_b_clock
drive gip_simple.par_b_clock par_b_clock
par_b_clocked:

#b Add wires
wire system_reset
wire leds[8]
wire txd rxd switches[8]
wire cke_last_of_logic
wire next_cke next_s_n[2] next_ras_n next_cas_n next_we_n next_a[13] next_ba[2] next_dq[32] next_dqm[4] next_dqoe next_dqs_high[4] next_dqs_low[4]
wire dqm[2] dq_to_ddr[16] dqs_to_ddr[2] dq_oe_ctl
wire        dq_to_ctl[16] dqs_to_ctl[2] dq_oe_ddr
wire dq_to_ctl_high[16] dq_to_ctl_low[16]
wire cke a[13] ba[2] we_n cas_n ras_n select_n[2]
wire select_0
extract select_0 select_n 0 1

wire ext_bus_ce[4] ext_bus_oe ext_bus_we ext_bus_address[24]
wire ext_bus_read_data[32] ext_bus_write_data[32] ext_bus_write_data_enable

wire eth_mii_rx_dv eth_mii_rx_d[4] eth_mii_rx_er
wire eth_mii_tx_en eth_mii_tx_d[4]

wire par_a_control_outputs[4] par_a_control_oes[4] par_a_data_outputs[16] par_a_data_output_width[3] par_a_data_oe
wire par_a_control_inputs[3] par_a_data_inputs[16]

wire par_b_control_outputs[4] par_b_control_oes[4] par_b_data_outputs[16] par_b_data_output_width[3] par_b_data_oe
wire par_b_control_inputs[3] par_b_data_inputs[16]

wire eth_mii_col
wire eth_mii_crs
assign eth_mii_col 0
assign eth_mii_crs 0

wire ssdo ssdo_oe
wire ssdi[2]
wire sscl[2] sscl_oe[2]
wire sscs[8]

wire logic_ck

#b Wire up DDR test harness
drive system_reset        ddrth.test_reset 
drive cke_last_of_logic ddrth.cke_last_of_logic
drive ddrth.dq_oe_ctl dq_oe_ctl
drive ddrth.dq_oe_ddr dq_oe_ddr
drive logic_ck ddrth.logic_ck
drive ddrth.logic_ck_fb logic_ck

#b Wire up extbus test harness
drive ext_bus_read_data extbusth.ext_bus_read_data
drive extbusth.ext_bus_ce ext_bus_ce
drive extbusth.ext_bus_oe ext_bus_oe
drive extbusth.ext_bus_we ext_bus_we
drive extbusth.ext_bus_write_data_enable ext_bus_write_data_enable
drive extbusth.ext_bus_write_data ext_bus_write_data
drive extbusth.ext_bus_address ext_bus_address
drive extbusth.leds leds

#b Wire up GIP simple
drive gip_simple.cke_last_of_logic cke_last_of_logic
assign switches 0
drive gip_simple.switches switches
drive gip_simple.system_reset system_reset
drive gip_simple.rxd rxd
drive txd gip_simple.txd
drive leds gip_simple.leds

drive gip_simple.ext_bus_read_data ext_bus_read_data
drive ext_bus_ce gip_simple.ext_bus_ce
drive ext_bus_oe gip_simple.ext_bus_oe
drive ext_bus_we gip_simple.ext_bus_we
drive ext_bus_write_data_enable gip_simple.ext_bus_write_data_enable
drive ext_bus_write_data gip_simple.ext_bus_write_data
drive ext_bus_address gip_simple.ext_bus_address

drive gip_simple.input_dq_high  dq_to_ctl_high
drive gip_simple.input_dq_low   dq_to_ctl_low

drive next_cke      gip_simple.next_cke
drive next_s_n      gip_simple.next_s_n
drive next_ras_n    gip_simple.next_ras_n
drive next_cas_n    gip_simple.next_cas_n
drive next_we_n     gip_simple.next_we_n
drive next_a        gip_simple.next_a
drive next_ba       gip_simple.next_ba
drive next_dq       gip_simple.next_dq
drive next_dqm      gip_simple.next_dqm
drive next_dqoe     gip_simple.next_dqoe
drive next_dqs_high gip_simple.next_dqs_high
drive next_dqs_low  gip_simple.next_dqs_low

drive gip_simple.eth_mii_rx_dv  eth_mii_rx_dv
drive gip_simple.eth_mii_rx_d   eth_mii_rx_d
drive gip_simple.eth_mii_rx_er  eth_mii_rx_er
drive gip_simple.eth_mii_col    eth_mii_col
drive gip_simple.eth_mii_crs    eth_mii_crs

drive eth_mii_tx_en gip_simple.eth_mii_tx_en
drive eth_mii_tx_d  gip_simple.eth_mii_tx_d

drive ssdo    gip_simple.ssdo
drive ssdo_oe gip_simple.ssdo_oe
drive sscl    gip_simple.sscl
drive sscl_oe gip_simple.sscl_oe
drive sscs    gip_simple.sscs
drive gip_simple.ssdi ssdi

drive par_a_control_outputs         gip_simple.par_a_control_outputs
drive par_a_control_oes             gip_simple.par_a_control_oes
drive par_a_data_outputs            gip_simple.par_a_data_outputs
drive par_a_data_output_width       gip_simple.par_a_data_output_width
drive par_a_data_oe                 gip_simple.par_a_data_oe
 
drive gip_simple.par_a_control_inputs  par_a_control_inputs
drive gip_simple.par_a_data_inputs     par_a_data_inputs

drive par_b_control_outputs         gip_simple.par_b_control_outputs
drive par_b_control_oes             gip_simple.par_b_control_oes
drive par_b_data_outputs            gip_simple.par_b_data_outputs
drive par_b_data_output_width       gip_simple.par_b_data_output_width
drive par_b_data_oe                 gip_simple.par_b_data_oe
 
drive gip_simple.par_b_control_inputs  par_b_control_inputs
drive gip_simple.par_b_data_inputs     par_b_data_inputs

#b Wire up DDR model
drive ddr.dqm     dqm
drive ddr.dq_in   dq_to_ddr
drive ddr.dqs_in  dqs_to_ddr
drive ddr.a       a
drive ddr.ba      ba
drive ddr.we_n    we_n
drive ddr.cas_n   cas_n
drive ddr.ras_n   ras_n
drive ddr.select_n select_0
drive ddr.cke     cke
drive dq_to_ctl  ddr.dq_out
drive dqs_to_ctl ddr.dqs_out
drive dq_oe_ddr  ddr.dq_oe

#b Wire up DDR pins model
drive ddr_pins.next_dqs_low next_dqs_low
drive ddr_pins.next_dqs_high next_dqs_high
drive ddr_pins.next_dqoe next_dqoe
drive ddr_pins.next_dqm next_dqm
drive ddr_pins.next_dq next_dq
drive ddr_pins.next_ba next_ba
drive ddr_pins.next_a next_a
drive ddr_pins.next_we_n next_we_n
drive ddr_pins.next_cas_n next_cas_n
drive ddr_pins.next_ras_n next_ras_n
drive ddr_pins.next_s_n next_s_n
drive ddr_pins.next_cke next_cke
drive ddr_pins.dqs_to_ctl dqs_to_ctl
drive ddr_pins.dq_to_ctl dq_to_ctl

drive dqm ddr_pins.dqm
drive dq_to_ddr  ddr_pins.dq_out
drive dqs_to_ddr ddr_pins.dqs_out
drive cke      ddr_pins.cke
drive a        ddr_pins.a
drive ba       ddr_pins.ba
drive we_n     ddr_pins.we_n
drive cas_n    ddr_pins.cas_n
drive ras_n    ddr_pins.ras_n
drive select_n ddr_pins.select_n

drive dq_oe_ctl ddr_pins.dq_oe_ctl
drive dq_to_ctl_high ddr_pins.dq_in_high
drive dq_to_ctl_low ddr_pins.dq_in_low

#b MII testbench
drive mii.int_reset          system_reset
drive mii.mon_mii_col        eth_mii_rx_er
drive mii.mon_mii_crs        eth_mii_tx_en
drive mii.mon_mii_data       eth_mii_tx_d
drive mii.mon_mii_enable     eth_mii_tx_en
beq env_int("rx_mii_enable") 0 rx_mii_tb_disable
drive eth_mii_rx_d           mii.rx_mii_data
drive eth_mii_rx_dv          mii.rx_mii_dv
drive eth_mii_rx_er          mii.rx_mii_err
goto rx_mii_tb_enable
rx_mii_tb_disable:
assign eth_mii_rx_d 0
assign eth_mii_rx_dv 0
assign eth_mii_rx_er 0
rx_mii_tb_enable:
beq env_int("tx_mii_enable") 0 tx_mii_tb_disable
drive mii.tx_mii_data        eth_mii_tx_d
drive mii.tx_mii_enable      eth_mii_tx_en
tx_mii_tb_disable:

#b Wire up UART testbench
drive uart_testbench.uart_clock logic_clock
drive uart_testbench.uart_reset system_reset
drive uart_testbench.rxd txd
drive rxd uart_testbench.txd

#b Wire up sync serial testbench
drive ss_th.ssdo       ssdo
drive ss_th.ssdo_oe    ssdo_oe
drive ss_th.sscl       sscl
drive ss_th.sscl_oe    sscl_oe
drive ss_th.sscs       sscs
drive ssdi             ss_th.ssdi

#b Wire up parallel A testbench
drive par_a_th.par_control_outputs         par_a_control_outputs
drive par_a_th.par_control_oes             par_a_control_oes
drive par_a_th.par_data_outputs            par_a_data_outputs
drive par_a_th.par_data_output_width       par_a_data_output_width
drive par_a_th.par_data_oe                 par_a_data_oe
 
drive par_a_control_inputs  par_a_th.par_control_inputs
drive par_a_data_inputs     par_a_th.par_data_inputs

#b Wire up parallel B testbench
drive par_b_th.par_control_outputs         par_b_control_outputs
drive par_b_th.par_control_oes             par_b_control_oes
drive par_b_th.par_data_outputs            par_b_data_outputs
drive par_b_th.par_data_output_width       par_b_data_output_width
drive par_b_th.par_data_oe                 par_b_data_oe
 
drive par_b_control_inputs  par_b_th.par_control_inputs
drive par_b_data_inputs     par_b_th.par_data_inputs


#b End
end

#a Editor preferences and notes
# Local Variables: ***
# mode: shell-script ***
# outline-regexp: "#[a!]\\\|#[\t ]*[b-z][\t ]" ***
# End: ***

