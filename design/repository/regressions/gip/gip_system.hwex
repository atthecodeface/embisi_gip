#a Copyright
#  
#  This file 'eth_0.hwex' copyright Gavin J Stark 2004
#  

#a Instantiate modules
#b Add GIP simple
module gip_system "gip_simple"

#b Add MII testbench
option_string "monitor_level" "15"
option_string "sources" env_string("mii_rx_sources")
module mii_testbench "mii"

#b Add UART testbench
option_string "exec_file" env_string("uart_exec_file")
option_int monitor_level 0
option_int tx_baud_add 1
option_int tx_baud_subtract 7
option_int rx_baud_add 1
option_int rx_baud_subtract 7
module uart_testbench "uart_testbench"

#b Add DDR model
option_string "filename" "ddr.mif"
module ddr_16m_x_32 "ddr"

#b Add test harness
option_string "clock" "ddr_clock"
option_string "inputs" "dq_oe_ctl dq_oe_ddr"
option_string "outputs" "test_reset cke_last_of_logic logic_ck"
option_string "filename" "gip_ddr.th"
module se_test_harness "th"

#b Add DDR pin logic
option_string "clock" "ddr_clock"
option_string "inputs" "next_cke next_s_n[2] next_ras_n next_cas_n next_we_n next_a[13] next_ba[2] next_dq[32] next_dqm[4] next_dqoe next_dqs_high[4] next_dqs_low[4] dq_to_ctl[32] dqs_to_ctl[4]"
option_string "outputs" "ddr_ck cke select_n[2] ras_n cas_n we_n ba[2] a[13] dqs_out[4] dq_out[32] dqm[4] dq_in_low[32] dq_in_high[32] dq_oe_ctl"
option_string "filename" "ddr_pins.th"
module se_test_harness "ddr_pins"

#a Wire them up
#b Drive clocks - name, delay, cycles high, cycles low
# ddr_clock is 8ns; 4 high, 4 low
# 4x clock is then 1 high, 1 low
# main clock is then at 96ns; 48 high, 48 low
# 10Mbps ethernet is at 400ns; 200 high, 200 low
clock ddr_x4_clock 0 1 1
clock ddr_clock 0 4 4
clock logic_clock 0 48 48
clock eth_clock 0 200 200

drive th.ddr_clock ddr_clock
drive ddr_pins.ddr_clock ddr_x4_clock
drive gip_simple.int_clock logic_clock
drive gip_simple.drm_clock ddr_clock
drive gip_simple.eth_mii_tx_clock eth_clock
drive gip_simple.eth_mii_rx_clock eth_clock
drive ddr.ddr_clock ddr_clock
drive mii.int_clock eth_clock

#b Add wires
wire system_reset
wire leds[8]
wire txd rxd switches[8]
wire cke_last_of_logic
wire low_bus[32]
wire next_cke next_s_n[2] next_ras_n next_cas_n next_we_n next_a[13] next_ba[2] next_dq[32] next_dqm[4] next_dqoe next_dqs_high[4] next_dqs_low[4]
wire dqm[4] dq_to_ddr[32] dqs_to_ddr[4] dq_oe_ctl
wire        dq_to_ctl[32] dqs_to_ctl[4] dq_oe_ddr
wire dq_to_ctl_high[32] dq_to_ctl_low[32]
wire cke a[13] ba[2] we_n cas_n ras_n select_n[2]
wire select_0
wire high
extract select_0 select_n 0 1
wire eth_mii_rx_dv eth_mii_rx_d[4] eth_mii_rx_er
wire eth_mii_tx_en eth_mii_tx_d[4]

wire eth_mdio_in
wire eth_mii_col
wire eth_mii_crs
assign eth_mdio_in 0
assign eth_mii_col 0
assign eth_mii_crs 0

wire ssdo
wire ssdi[2]

#b Wire up test harness
drive system_reset        th.test_reset 
drive cke_last_of_logic th.cke_last_of_logic
drive th.dq_oe_ctl dq_oe_ctl
drive th.dq_oe_ddr dq_oe_ddr

#b Wire up GIP simple
drive gip_simple.cke_last_of_logic cke_last_of_logic
assign switches 3
drive gip_simple.switches switches
drive gip_simple.system_reset system_reset
drive gip_simple.rxd rxd
drive txd gip_simple.txd
drive leds gip_simple.leds
drive gip_simple.ext_bus_read_data low_bus
assign low_bus 0

drive gip_simple.input_dq_high  dq_to_ctl_high
drive gip_simple.input_dq_low   dq_to_ctl_low

drive next_cke      gip_simple.next_cke
drive next_s_n      gip_simple.next_s_n
drive next_ras_n    gip_simple.next_ras_n
drive next_cas_n    gip_simple.next_cas_n
drive next_we_n     gip_simple.next_we_n
drive next_a        gip_simple.next_a
drive next_ba       gip_simple.next_ba
drive next_dq       gip_simple.next_dq
drive next_dqm      gip_simple.next_dqm
drive next_dqoe     gip_simple.next_dqoe
drive next_dqs_high gip_simple.next_dqs_high
drive next_dqs_low  gip_simple.next_dqs_low

drive gip_simple.eth_mdio_in    eth_mdio_in
drive gip_simple.eth_mii_rx_dv  eth_mii_rx_dv
drive gip_simple.eth_mii_rx_d   eth_mii_rx_d
drive gip_simple.eth_mii_rx_er  eth_mii_rx_er
drive gip_simple.eth_mii_col    eth_mii_col
drive gip_simple.eth_mii_crs    eth_mii_crs

drive eth_mii_tx_en gip_simple.eth_mii_tx_en
drive eth_mii_tx_d  gip_simple.eth_mii_tx_d

extract ssdi eth_mii_rx_d 0 2
drive gip_simple.ssdi ssdi
drive ssdo gip_simple.ssdo

#b Wire up DDR model
assign high 1
drive ddr.dqm     dqm
drive ddr.dq_in   dq_to_ddr
drive ddr.dqs_in  dqs_to_ddr
drive ddr.a       a
drive ddr.ba      ba
drive ddr.we_n    we_n
drive ddr.cas_n   cas_n
drive ddr.ras_n   ras_n
drive ddr.select_n select_0
drive ddr.cke     cke
drive dq_to_ctl  ddr.dq_out
drive dqs_to_ctl ddr.dqs_out
drive dq_oe_ddr  ddr.dq_oe

#b Wire up DDR pins model
drive ddr_pins.next_dqs_low next_dqs_low
drive ddr_pins.next_dqs_high next_dqs_high
drive ddr_pins.next_dqoe next_dqoe
drive ddr_pins.next_dqm next_dqm
drive ddr_pins.next_dq next_dq
drive ddr_pins.next_ba next_ba
drive ddr_pins.next_a next_a
drive ddr_pins.next_we_n next_we_n
drive ddr_pins.next_cas_n next_cas_n
drive ddr_pins.next_ras_n next_ras_n
drive ddr_pins.next_s_n next_s_n
drive ddr_pins.next_cke next_cke
drive ddr_pins.dqs_to_ctl dqs_to_ctl
drive ddr_pins.dq_to_ctl dq_to_ctl

drive dqm ddr_pins.dqm
drive dq_to_ddr  ddr_pins.dq_out
drive dqs_to_ddr ddr_pins.dqs_out
drive cke      ddr_pins.cke
drive a        ddr_pins.a
drive ba       ddr_pins.ba
drive we_n     ddr_pins.we_n
drive cas_n    ddr_pins.cas_n
drive ras_n    ddr_pins.ras_n
drive select_n ddr_pins.select_n

drive dq_oe_ctl ddr_pins.dq_oe_ctl
drive dq_to_ctl_high ddr_pins.dq_in_high
drive dq_to_ctl_low ddr_pins.dq_in_low

#b MII testbench
drive mii.int_reset          system_reset
drive mii.mon_mii_col        eth_mii_rx_er
drive mii.mon_mii_crs        eth_mii_tx_en
drive mii.mon_mii_data       eth_mii_tx_d
drive mii.mon_mii_enable     eth_mii_tx_en
drive eth_mii_rx_d           mii.rx_mii_data
drive eth_mii_rx_dv          mii.rx_mii_dv
drive eth_mii_rx_er          mii.rx_mii_err

#b Wire up UART testbench
drive uart_testbench.uart_clock logic_clock
drive uart_testbench.uart_reset system_reset
drive uart_testbench.rxd txd
drive rxd uart_testbench.txd

#b End
end

#a Editor preferences and notes
# Local Variables: ***
# mode: shell-script ***
# outline-regexp: "#[a!]\\\|#[\t ]*[b-z][\t ]" ***
# End: ***

