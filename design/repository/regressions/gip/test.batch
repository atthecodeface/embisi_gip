#a Copyright
#  
#  This file 'test.batch' copyright Gavin J Stark 2003, 2004
#  

#a Variables
int run_length
int vcd_create
string vcd_full_filename
string vcd_filename

set vcd_create 1

#a Main
#gosub gip_prefetch_tests
#gosub gip_tests
gosub gip_simple_tests
end

#a Gip prefetch tests
#f gip_prefetch_tests
gip_prefetch_tests:

#b gip_prefetch_0
set run_length 40000
set_string vcd_filename "gip_prefetch_0"s
setenv "memory_log_size" 16
gosub gip_prefetch_test

#b Done
return

#a Gip prefetch subroutines
#f gip_prefetch_test
gip_prefetch_test:

read_hw_file gip_prefetch.hwex

beq vcd_create 0 gip_prefetch_test_no_vcd    
sprintf vcd_full_filename "%s0%/%s1%.vcd" env_string("run_dir") vcd_filename
vcd_file_open "allsignals" vcd_full_filename
vcd_file_add "allsignals" "gip_prefetch" "instruction_sram"
vcd_file_enable "allsignals"
reset
step run_length
vcd_file_close "allsignals"
return

gip_prefetch_test_no_vcd:
reset
step run_length
return


#a Gip tests
#f gip_tests
gip_tests:

setenv "verbose_level" 1

#gosub gip_0
#gosub gip_1

set vcd_create 1
gosub gip_uart
return

set vcd_create 0
gosub gip_linux
return

set vcd_create 0
gosub gip_memory
gosub gip_factorial
gosub gip_arm_alu
return

#b gip_0
gip_0:
set run_length 400
set_string vcd_filename "gip_0"
setenv "memory_log_size" 16
setenv "gip_iram_mif" "bin/gip_iram_0.mif"
setenv "gip_dram_mif" "data/none.mif"
setenv "post_rom_mif" "data/none.mif"
gosub gip_test
return

#b gip_1
gip_1:
#set run_length 40000000
set run_length 400
set_string vcd_filename "gip_1"
setenv "memory_log_size" 16
setenv "gip_iram_mif" "bin/gip_iram_1.mif"
setenv "gip_dram_mif" "data/gip_dram_1.mif"
setenv "post_rom_mif" "data/none.mif"
gosub gip_test
return

#b gip_uart
gip_uart:
#set run_length 40000000
set run_length 10000
set_string vcd_filename "gip_uart"
setenv "memory_log_size" 16
setenv "gip_iram_mif" "../arm/bin/uart.mif"
setenv "gip_dram_mif" "data/none.mif"
setenv "post_rom_mif" "data/none.mif"
gosub gip_test
return

#b gip_memory
gip_memory:
#set run_length 40000000
set run_length 10000
set_string vcd_filename "gip_memory"
setenv "memory_log_size" 16
setenv "gip_iram_mif" "../arm/bin/memory.mif"
setenv "gip_dram_mif" "data/none.mif"
setenv "post_rom_mif" "data/none.mif"
gosub gip_test
return

#b gip_factorial
gip_factorial:
set run_length 10000
set_string vcd_filename "gip_factorial"
setenv "memory_log_size" 16
setenv "gip_iram_mif" "../arm/bin/factorial.mif"
setenv "gip_dram_mif" "data/none.mif"
setenv "post_rom_mif" "data/none.mif"
gosub gip_test
return

#b gip_arm_alu
gip_arm_alu:
set run_length 80000
set_string vcd_filename "gip_arm_alu"
setenv "memory_log_size" 16
setenv "gip_iram_mif" "../arm/bin/alu.mif"
setenv "gip_dram_mif" "data/none.mif"
setenv "post_rom_mif" "data/none.mif"
gosub gip_test
return

#b gip_linux
gip_linux:
set run_length 200000
set_string vcd_filename "gip_linux"
# 16 MB of RAM!
setenv "memory_log_size" 22
# 64 MB of RAM!
setenv "memory_log_size" 24
setenv "gip_iram_mif" "/home/localgjs/tnbt_cvs_trees/software/os/linux/combined.mif"
setenv "gip_dram_mif" "data/none.mif"
setenv "post_rom_mif" "data/none.mif"
gosub gip_test
return

#a Gip subroutines
#f gip_test
gip_test:

read_hw_file gip.hwex

beq vcd_create 0 gip_test_no_vcd
sprintf vcd_full_filename "%s0%/%s1%.vcd" env_string("run_dir") vcd_filename
vcd_file_open "allsignals" vcd_full_filename
vcd_file_add "allsignals" "gipc"
vcd_file_add "allsignals" "gip_prefetch" "gip_data_ram" "shared_sram"
vcd_file_add "allsignals" "gipc.decode" "gipc.decode.native""gipc.decode.arm" "gipc.rf" "gipc.alu" "gipc.alu.shift_op"
vcd_file_add "allsignals" "gip_periph_apb" "apb_target_uart" "io_uart"
vcd_file_enable "allsignals"
reset
step run_length
vcd_file_close "allsignals"
return

gip_test_no_vcd:
reset
step run_length
return


#b Done
return

#a Gip simple tests
#f gip_simple_tests
gip_simple_tests:

setenv "verbose_level" 1

set vcd_create 1
gosub gip_simple_0

return

#b gip_simple_0
gip_simple_0:
set run_length 500000
setenv "uart_exec_file" "src/gip_simple_uart_0.ef"
set_string vcd_filename "gip_simple_0"
gosub gip_simple_test
return

#a Gip simple subroutines
#f gip_simple_test
gip_simple_test:

read_hw_file gip_simple.hwex

beq vcd_create 0 gip_simple_test_no_vcd
sprintf vcd_full_filename "%s0%/%s1%.vcd" env_string("run_dir") vcd_filename
vcd_file_open "allsignals" vcd_full_filename
#vcd_file_add "allsignals" "gip_simple"
#vcd_file_add "allsignals" "gip_simple.gip"
#vcd_file_add "allsignals" "gip_simple.prefetch" "gip_simple.data_ram" "gip_simple.boot_rom" "gip_simple.shared_sram"
#vcd_file_add "allsignals" "gip_simple.gip.decode" "gip_simple.gip.decode.native" "gip_simple.gip.decode.arm" "gip_simple.gip.rf" "gip_simple.gip.alu" "gip_simple.gip.alu.shift_op"
#vcd_file_add "allsignals" "gip_simple.gip_apb" "gip_simple.uart_apb" "gip_simple.uart_apb.status_fifo"  "gip_simple.uart_apb.cmd_fifo" "gip_simple.uart_io"
vcd_file_add "allsignals" "rxd" "txd"
vcd_file_enable "allsignals"
reset
step run_length
vcd_file_close "allsignals"
return

gip_simple_test_no_vcd:
reset
step run_length
return


#b Done
return

#a Editor preferences and notes
# Local Variables: ***
# mode: shell-script ***
# outline-regexp: "#[a!]\\\|#[\t ]*[b-z][\t ]" ***
# End: ***
